app:
  run_mode: debug                 # 开发模式, debug, release, test
  addr: :8080                     # HTTP绑定端口
  name: fastim                     # API Server的名字
  url: http://127.0.0.1:8080      # pingServer函数请求的API服务器的ip:port
  max_ping_count: 10              # pingServer函数try的次数
  jwt_secret: Rtg8BPKNEf2mB4mgvKONGPZZQSaJWNLijxR42qRgq0iBb5
log:
  writers: file,stdout            # 有2个可选项：file,stdout, 可以两者同时选择输出位置，有2个可选项：file,stdout。选择file会将日志记录到logger_file指定的日志文件中，选择stdout会将日志输出到标准输出，当然也可以两者同时选择
  logger_level: DEBUG             # 日志级别，DEBUG, INFO, WARN, ERROR, FATAL
  logger_file: /data/logs/fastim.log   # 日志文件
  logger_warn_file: /data/logs/fastim.wf.log
  logger_error_file: /data/logs/fastim.err.log
  log_format_text: false          # 日志的输出格式，json或者plaintext，目前设置为false即可，暂时也只支持json格式
  log_rolling_policy: daily,      # rotate依据，可选的有：daily, hourly。如果选daily(默认)则根据天进行转存，如果是hourly则根据小时进行转存
  log_rotate_date: 1              # rotate转存时间，配合rollingPolicy: daily使用
  log_rotate_size: 1              # rotate转存大小，配合rollingPolicy: size使用
  log_backup_count: 7             # 当日志文件达到转存标准时，log系统会将该日志文件进行压缩备份，这里指定了备份文件的最大个数。
mysql:
  name: snake
  addr: 127.0.0.1:3306 # 如果是 docker,可以替换为 对应的服务名称，eg: db:3306
  username: root
  password: 123456
  show_log: true                  # 是否打印SQL日志
  max_idle_conn: 10               # 最大闲置的连接数
  max_open_conn: 60               # 最大打开的连接数
  conn_max_life_time: 60          # 连接重用的最大时间，单位分钟
cache:
  driver: "memory"                 # 缓存驱动，可以选memory、redis, 默认redis
  prefix: "snake:"                 # cache key前缀，一般为项目名称即可
redis:
  addr: "localhost:6379"
  password: "" # no password set
  db: 0 # use default DB
  dial_timeout: 60s   # 单位：秒
  read_timeout: 2s   # 单位：秒
  write_timeout: 2s  # 单位：秒
  pool_size: 60
  pool_timeout: 30s
